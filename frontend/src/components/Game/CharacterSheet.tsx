import React, { useState } from 'react';
import { useGame, CharacterCard } from '../../contexts/GameContext';

interface CharacterSheetProps {
  onCharacteristicSelect: (categoryIndex: number) => void;
  selectedCategory?: number;
  canSelect: boolean;
}

export function CharacterSheet({ onCharacteristicSelect, selectedCategory, canSelect }: CharacterSheetProps) {
  const { myCharacter } = useGame();
  const [hoveredCategory, setHoveredCategory] = useState<number | null>(null);
  const [localSelectedCategory, setLocalSelectedCategory] = useState<number | null>(null);
  const [isConfirming, setIsConfirming] = useState(false);

  const handleCategoryClick = (index: number) => {
    if (!canSelect) return;
    setLocalSelectedCategory(index);
  };

  const handleConfirm = async () => {
    if (localSelectedCategory === null || !onCharacteristicSelect) return;
    
    setIsConfirming(true);
    try {
      await onCharacteristicSelect(localSelectedCategory);
      setLocalSelectedCategory(null);
    } finally {
      setIsConfirming(false);
    }
  };

  const handleCancel = () => {
    setLocalSelectedCategory(null);
  };

  if (!myCharacter) {
    return (
      <div className="character-sheet">
        <div className="card">
          <h3>–õ–∏—Å—Ç –ü–µ—Ä—Å–æ–Ω–∞–∂–∞</h3>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...</p>
        </div>
      </div>
    );
  }

  const categories = [
    { key: 'rank', name: '–†–∞–Ω–≥', value: myCharacter.rank },
    { key: 'cursedTechnique', name: '–ü—Ä–æ–∫–ª—è—Ç–∞—è –¢–µ—Ö–Ω–∏–∫–∞', value: myCharacter.cursedTechnique },
    { key: 'cursedEnergyLevel', name: '–£—Ä–æ–≤–µ–Ω—å –ü—Ä–æ–∫–ª—è—Ç–æ–π –≠–Ω–µ—Ä–≥–∏–∏', value: myCharacter.cursedEnergyLevel },
    { key: 'generalTechniques', name: '–û–±—â–∏–µ –¢–µ—Ö–Ω–∏–∫–∏', value: myCharacter.generalTechniques },
    { key: 'cursedTools', name: '–ü—Ä–æ–∫–ª—è—Ç—ã–µ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', value: myCharacter.cursedTools },
    { key: 'strengths', name: '–°–∏–ª—å–Ω—ã–µ –°—Ç–æ—Ä–æ–Ω—ã', value: myCharacter.strengths },
    { key: 'weaknesses', name: '–°–ª–∞–±—ã–µ –°—Ç–æ—Ä–æ–Ω—ã', value: myCharacter.weaknesses },
    { key: 'specialTraits', name: '–û—Å–æ–±—ã–µ –ß–µ—Ä—Ç—ã', value: myCharacter.specialTraits },
    { key: 'currentState', name: '–¢–µ–∫—É—â–µ–µ –°–æ—Å—Ç–æ—è–Ω–∏–µ', value: myCharacter.currentState }
  ];

  const formatValue = (value: any) => {
    if (Array.isArray(value.value)) {
      return value.value.length > 0 ? value.value.join(', ') : '–ù–∏—á–µ–≥–æ';
    }
    return value.value || '–ù–∏—á–µ–≥–æ';
  };

  const getCategoryIcon = (categoryName: string) => {
    const icons: Record<string, string> = {
      '–†–∞–Ω–≥': '‚≠ê',
      '–ü—Ä–æ–∫–ª—è—Ç–∞—è –¢–µ—Ö–Ω–∏–∫–∞': '‚ö°',
      '–£—Ä–æ–≤–µ–Ω—å –ü—Ä–æ–∫–ª—è—Ç–æ–π –≠–Ω–µ—Ä–≥–∏–∏': 'üî•',
      '–û–±—â–∏–µ –¢–µ—Ö–Ω–∏–∫–∏': 'üõ°Ô∏è',
      '–ü—Ä–æ–∫–ª—è—Ç—ã–µ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': 'üó°Ô∏è',
      '–°–∏–ª—å–Ω—ã–µ –°—Ç–æ—Ä–æ–Ω—ã': 'üí™',
      '–°–ª–∞–±—ã–µ –°—Ç–æ—Ä–æ–Ω—ã': '‚ö†Ô∏è',
      '–û—Å–æ–±—ã–µ –ß–µ—Ä—Ç—ã': '‚ú®',
      '–¢–µ–∫—É—â–µ–µ –°–æ—Å—Ç–æ—è–Ω–∏–µ': 'üß†'
    };
    return icons[categoryName] || 'üìã';
  };

  return (
    <div className="character-sheet">
      <div className="card">
        <div className="card-header">
          <h3>–í–∞—à –ü–µ—Ä—Å–æ–Ω–∞–∂</h3>
          <p>–í–∞—à–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∏ —á–µ—Ä—Ç—ã</p>
        </div>

        <div className="character-grid">
          {categories.map((category, index) => {
            // –í–ª–∞–¥–µ–ª–µ—Ü –≤–∏–¥–∏—Ç –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–æ badge "–†–∞—Å–∫—Ä—ã—Ç–æ" —Ç–æ–ª—å–∫–æ –¥–ª—è revealed
            const isRevealed = category.value.revealed;
            const isSelected = localSelectedCategory === index;
            const isHovered = hoveredCategory === index;
            const isClickable = canSelect && !category.value.revealed;

            return (
              <div
                key={category.key}
                className={`character-category ${isRevealed ? 'revealed' : ''} ${isSelected ? 'selected' : ''} ${isClickable ? 'clickable' : ''}`}
                onClick={() => isClickable && handleCategoryClick(index)}
                onMouseEnter={() => setHoveredCategory(index)}
                onMouseLeave={() => setHoveredCategory(null)}
              >
                <div className="category-header">
                  <span className="category-icon">{getCategoryIcon(category.name)}</span>
                  <span className="category-name">{category.name}</span>
                  {isRevealed && <span className="revealed-badge">–†–∞—Å–∫—Ä—ã—Ç–æ</span>}
                </div>

                <div className="category-content">
                  <div className="value">{formatValue(category.value)}</div>
                  {!isRevealed && canSelect && (
                    <div className="not-revealed-hint">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è</div>
                  )}
                  {isSelected && !isRevealed && (
                    <div className="selected-hint">–í—ã–±—Ä–∞–Ω–æ –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è</div>
                  )}
                </div>

                {isSelected && (
                  <div className="selection-indicator">
                    ‚úì –í—ã–±—Ä–∞–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞—É–Ω–¥–∞
                  </div>
                )}
              </div>
            );
          })}
        </div>

        <div className="character-notes">
          <p>
            <strong>–ü–æ–º–Ω–∏—Ç–µ:</strong> –í—ã–±–∏—Ä–∞–π—Ç–µ —Å–≤–æ–∏ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ. –ö–∞–∂–¥–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç–µ, 
            –±—É–¥–µ—Ç –≤–∏–¥–Ω–∞ –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º –∏ –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –∏—Ö —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏.
          </p>
        </div>
      </div>

      {/* –ë–ª–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è */}
      {canSelect && localSelectedCategory !== null && (
        <div className="confirm-reveal">
          <div className="card">
            <h4>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è</h4>
            <p>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å–∫—Ä—ã—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É <strong>{categories[localSelectedCategory]?.name}</strong>?</p>
            <p className="warning-text">–≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –≤–∏–¥–Ω–∞ –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º –∏ –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –∏—Ö —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏.</p>
            <div className="confirm-buttons">
              <button 
                className="btn btn-primary" 
                onClick={handleConfirm}
                disabled={isConfirming}
              >
                {isConfirming ? '–†–∞—Å–∫—Ä—ã—Ç–∏–µ...' : '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä'}
              </button>
              <button 
                className="btn btn-secondary" 
                onClick={handleCancel}
                disabled={isConfirming}
              >
                –û—Ç–º–µ–Ω–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
