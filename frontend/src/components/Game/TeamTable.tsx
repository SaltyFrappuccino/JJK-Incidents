import React from 'react';
import { useGame } from '../../contexts/GameContext';
import type { RevealedCharacteristic } from '../../contexts/GameContext';

interface PlayerCharacteristics {
  rank?: { value: string };
  cursedTechnique?: { value: string };
  cursedEnergyLevel?: { value: string };
  generalTechniques?: { value: string };
  cursedTools?: { value: string };
  strengths?: { value: string };
  weaknesses?: { value: string };
  specialTraits?: { value: string };
  currentState?: { value: string };
}

export function TeamTable() {
  const { gameState, revealedCharacteristics, myPlayer } = useGame();

  if (!gameState) return null;

  const getPlayerCharacteristics = (playerId: string): PlayerCharacteristics => {
    const playerRevealed = revealedCharacteristics.filter(rc => rc.playerId === playerId);
    const characteristics: PlayerCharacteristics = {};
    
    playerRevealed.forEach(rc => {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const valueString = Array.isArray(rc.value) ? rc.value.join(', ') : rc.value;
      
      switch (rc.categoryName) {
        case '–†–∞–Ω–≥':
          characteristics.rank = { value: valueString };
          break;
        case '–ü—Ä–æ–∫–ª—è—Ç–∞—è –¢–µ—Ö–Ω–∏–∫–∞':
          characteristics.cursedTechnique = { value: valueString };
          break;
        case '–£—Ä–æ–≤–µ–Ω—å –ü—Ä–æ–∫–ª—è—Ç–æ–π –≠–Ω–µ—Ä–≥–∏–∏':
          characteristics.cursedEnergyLevel = { value: valueString };
          break;
        case '–û–±—â–∏–µ –¢–µ—Ö–Ω–∏–∫–∏':
          characteristics.generalTechniques = { value: valueString };
          break;
        case '–ü—Ä–æ–∫–ª—è—Ç—ã–µ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã':
          characteristics.cursedTools = { value: valueString };
          break;
        case '–°–∏–ª—å–Ω—ã–µ –°—Ç–æ—Ä–æ–Ω—ã':
          characteristics.strengths = { value: valueString };
          break;
        case '–°–ª–∞–±—ã–µ –°—Ç–æ—Ä–æ–Ω—ã':
          characteristics.weaknesses = { value: valueString };
          break;
        case '–û—Å–æ–±—ã–µ –ß–µ—Ä—Ç—ã':
          characteristics.specialTraits = { value: valueString };
          break;
        case '–¢–µ–∫—É—â–µ–µ –°–æ—Å—Ç–æ—è–Ω–∏–µ':
          characteristics.currentState = { value: valueString };
          break;
      }
    });
    
    return characteristics;
  };

  const getCategoryIcon = (categoryName: string): string => {
    const icons: Record<string, string> = {
      '–†–∞–Ω–≥': '‚≠ê',
      '–ü—Ä–æ–∫–ª—è—Ç–∞—è –¢–µ—Ö–Ω–∏–∫–∞': '‚ö°',
      '–£—Ä–æ–≤–µ–Ω—å –ü—Ä–æ–∫–ª—è—Ç–æ–π –≠–Ω–µ—Ä–≥–∏–∏': 'üí•',
      '–û–±—â–∏–µ –¢–µ—Ö–Ω–∏–∫–∏': 'ü•ã',
      '–ü—Ä–æ–∫–ª—è—Ç—ã–µ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': 'üîß',
      '–°–∏–ª—å–Ω—ã–µ –°—Ç–æ—Ä–æ–Ω—ã': 'üí™',
      '–°–ª–∞–±—ã–µ –°—Ç–æ—Ä–æ–Ω—ã': '‚ö†Ô∏è',
      '–û—Å–æ–±—ã–µ –ß–µ—Ä—Ç—ã': '‚ú®',
      '–¢–µ–∫—É—â–µ–µ –°–æ—Å—Ç–æ—è–Ω–∏–µ': 'üß†'
    };
    return icons[categoryName] || 'üìã';
  };

  return (
    <div className="team-table-container">
      <h3>–ö–æ–º–∞–Ω–¥–∞</h3>
      <div className="table-wrapper">
        <table className="team-table">
          <thead>
            <tr>
              <th className="player-col">–ò–≥—Ä–æ–∫</th>
              <th className="category-col">
                <span className="category-header">‚≠ê –†–∞–Ω–≥</span>
              </th>
              <th className="category-col">
                <span className="category-header">‚ö° –ü—Ä–æ–∫–ª—è—Ç–∞—è –¢–µ—Ö–Ω–∏–∫–∞</span>
              </th>
              <th className="category-col">
                <span className="category-header">üí• –£—Ä–æ–≤–µ–Ω—å –≠–Ω–µ—Ä–≥–∏–∏</span>
              </th>
              <th className="category-col">
                <span className="category-header">ü•ã –û–±—â–∏–µ –¢–µ—Ö–Ω–∏–∫–∏</span>
              </th>
              <th className="category-col">
                <span className="category-header">üîß –ü—Ä–æ–∫–ª—è—Ç—ã–µ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</span>
              </th>
              <th className="category-col">
                <span className="category-header">üí™ –°–∏–ª—å–Ω—ã–µ –°—Ç–æ—Ä–æ–Ω—ã</span>
              </th>
              <th className="category-col">
                <span className="category-header">‚ö†Ô∏è –°–ª–∞–±—ã–µ –°—Ç–æ—Ä–æ–Ω—ã</span>
              </th>
              <th className="category-col">
                <span className="category-header">‚ú® –û—Å–æ–±—ã–µ –ß–µ—Ä—Ç—ã</span>
              </th>
              <th className="category-col">
                <span className="category-header">üß† –°–æ—Å—Ç–æ—è–Ω–∏–µ</span>
              </th>
            </tr>
          </thead>
          <tbody>
            {gameState.players.map((player) => {
              const characteristics = getPlayerCharacteristics(player.id);
              const isMyPlayer = player.id === myPlayer?.id;
              const isEliminated = gameState.eliminatedPlayers.includes(player.id);
              const revealedCount = revealedCharacteristics.filter(rc => rc.playerId === player.id).length;

              return (
                <tr 
                  key={player.id} 
                  className={`player-row ${isMyPlayer ? 'my-player' : ''} ${player.role === 'host' ? 'host-player' : ''}`}
                >
                  <td className="player-cell">
                    <div className="player-info">
                      <div className={`player-name ${isEliminated ? 'eliminated-name' : ''}`}>
                        {player.name}
                        {player.role === 'host' && <span className="badge host-badge">–ú–ò</span>}
                        {isMyPlayer && <span className="badge you-badge">–í–´</span>}
                      </div>
                      <div className="player-status">
                        {player.isConnected ? (
                          <span className="status-online">‚óè –û–Ω–ª–∞–π–Ω</span>
                        ) : (
                          <span className="status-offline">‚óè –û—Ñ–ª–∞–π–Ω</span>
                        )}
                      </div>
                      <div className="reveal-progress">
                        –†–∞—Å–∫—Ä—ã—Ç–æ: {revealedCount}/9
                      </div>
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.rank ? (characteristics.rank.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.cursedTechnique ? (characteristics.cursedTechnique.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.cursedEnergyLevel ? (characteristics.cursedEnergyLevel.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.generalTechniques ? (characteristics.generalTechniques.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.cursedTools ? (characteristics.cursedTools.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.strengths ? (characteristics.strengths.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.weaknesses ? (characteristics.weaknesses.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.specialTraits ? (characteristics.specialTraits.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                  <td className="characteristic-cell">
                    <div className="characteristic-value">
                      {characteristics.currentState ? (characteristics.currentState.value || '–ù–∏—á–µ–≥–æ') : '‚Äî'}
                    </div>
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    </div>
  );
}
